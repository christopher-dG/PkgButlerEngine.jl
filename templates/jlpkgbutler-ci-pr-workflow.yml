name: Run CI on PR

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [$[[JL_VERSION_MATRIX]]]
        julia-arch: [x64, x86]
        os: [ubuntu-latest, windows-latest, macOS-latest]
        exclude:
          - os: macOS-latest
            julia-arch: x86$[[ADDITIONAL_MATRIX_EXCLUDES]]

    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/julia-buildpkg@latest
        env:
          PYTHON: ""
      - uses: julia-actions/julia-runtest@latest
        env:
          PYTHON: ""
      - name: Create coverage information
        run: julia -e 'using Pkg; Pkg.add("Coverage"); using Coverage; LCOV.writefile("lcov.info",process_folder())'
      - name: Upload coverage to Codecov  
        uses: codecov/codecov-action@v1
        with:
          file: ./lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
$[[#include_codeformat_lint]]
  formatlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/julia-codeformat-lint@releases/v1
$[[/include_codeformat_lint]]
